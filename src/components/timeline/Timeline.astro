---
import type { WorkProps } from "@sections/work/Work.astro";
import Work from "@sections/work/Work.astro";
import { ChevronDown } from "lucide-astro";
import TimelineItem from "./TimelineItem.astro";

interface Props {
  works: WorkProps[];
}

const { translations } = Astro.locals;
const t = translations.sections.experience;

const { works } = Astro.props;

const lastTwoWorks = works?.slice(-2) ?? [];
const restWorks = works?.slice(0, -2) ?? [];
---

<div id="timeline">
  {
    restWorks.map((work) => (
      <TimelineItem>
        <Work {...work} />
      </TimelineItem>
    ))
  }

  <!-- Collapse -->
  <div
    class="w-full overflow-hidden transition-[height] duration-500 h-0 [&:has(~_label>input:checked)]:h-auto"
    id="collapse-box"
    aria-expanded="false"
  >
    {
      lastTwoWorks.map((work) => (
        <TimelineItem>
          <Work {...work} />
        </TimelineItem>
      ))
    }
  </div>
  <!-- End Collapse -->

  <!-- Show more button -->
  <label class="ps-[7px] gap-x-3 flex justify-center">
    <input class="peer absolute scale-0" type="checkbox" />
    <span
      class="group cursor-pointer flex bg-primary rounded-md px-4 py-1 text-primary-foreground items-center space-x-1 shadow-lg font-semibold"
    >
      <span class="peer-checked:group-[]:hidden">{t.showMore}</span>
      <span class="peer-checked:group-[]:block hidden">{t.showLess}</span>
      <ChevronDown
        class="transition-transform duration-300 peer-checked:group-[]:-rotate-180 size-6"
      />
    </span>
  </label>
  <!-- Show more button  -->
</div>
<style>
  [data-mask] {
    mask-image: linear-gradient(
      to bottom,
      black 0%,
      black 40%,
      transparent 80%
    );
  }
</style>
