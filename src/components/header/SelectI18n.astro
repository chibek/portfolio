---
import { Languages } from "lucide-astro";

const languages = [
  { value: "en", label: "English", href: "/" },
  { value: "es", label: "Espa√±ol", href: "/es" },
];
---

<div
  class="flex-none hs-dropdown [--strategy:absolute] [--flip:false] hs-dropdown-example relative inline-flex"
>
  <button
    id="hs-dropdown-example"
    type="button"
    class="hs-dropdown-toggle py-3 px-4 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-gray-200 bg-white text-gray-800 shadow-sm hover:bg-gray-50 focus:outline-none focus:bg-gray-50 disabled:opacity-50 disabled:pointer-events-none dark:bg-neutral-800 dark:border-neutral-700 dark:text-white dark:hover:bg-neutral-700 dark:focus:bg-neutral-700"
    aria-haspopup="menu"
    aria-expanded="false"
    aria-label="Dropdown"
  >
    <Languages class="size-4" />
  </button>

  <div
    class="hs-dropdown-menu transition-[opacity,margin] duration hs-dropdown-open:opacity-100 opacity-0 hidden z-10 bg-white shadow-md rounded-lg p-2 dark:bg-neutral-800 dark:border dark:border-neutral-700 dark:divide-neutral-700"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="hs-dropdown-example"
  >
    {
      languages.map((language) => (
        <a
          class="flex items-center gap-x-3.5 py-2 px-3 rounded-lg text-sm text-gray-800 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 dark:text-neutral-400 dark:hover:bg-neutral-700 dark:hover:text-neutral-300 dark:focus:bg-neutral-700"
          href={language.href}
        >
          {language.label}
        </a>
      ))
    }
  </div>
</div>

<script>
  document.addEventListener("astro:page-load", async () => {
    try {
      // Dynamically import the dropdown module
      const module = await import("@preline/dropdown/index.js");

      // Optionally, you can use the module here if needed
      console.log("Dropdown module loaded:", module);
    } catch (error) {
      console.error("Error loading dropdown module:", error);
    }
  });
</script>
